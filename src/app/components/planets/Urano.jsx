/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Topson_Noble (https://sketchfab.com/Topson_Noble)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/planet-uranus-2b9de21987c6419ebe72df19e9c4163a
title: Planet Uranus
*/
import React, { useRef, Suspense } from "react";
import {
  OrbitControls,
  Center,
  Sparkles,
  useProgress,
  Html,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

function Loader() {
  const { progress } = useProgress();
  return <Html center>{progress.toFixed(2)} % loaded</Html>;
}

const UranoModel = (props) => {
  const { nodes, materials } = useGLTF("/uranodraco.gltf");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-1.7, 0, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_3.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_2.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_1.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_7.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_5.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_4.geometry}
              material={materials["Mat.1"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Esfera_Mat1_0_6.geometry}
              material={materials["Mat.1"]}
            />
          </group>
          <group rotation={[0.14, 0, 0]}>
            <group position={[-450, 50, 0]} rotation={[-0.27, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plano_Mat_0.geometry}
                material={materials.material}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

export const Urano = () => {
  return (
    <Canvas camera={{ position: [522, 2, 522], fov: 60 }} className={"canvas"}>
      <Suspense fallback={<Loader />}>
      <OrbitControls
          enableRotate={true}
          enablePan={true}
          enableZoom={true}
          autoRotate
          autoRotateSpeed={0.3}
        />
        <ambientLight intensity={2.2} />
        <Sparkles count={5000} scale={1111 * 2} size={1} speed={0.4}>
          <UranoModel />
      </Sparkles>
      </Suspense>
  </Canvas>
  )
}

useGLTF.preload("/uranodraco.gltf");