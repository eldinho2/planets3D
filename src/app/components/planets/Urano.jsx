/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Topson_Noble (https://sketchfab.com/Topson_Noble)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/planet-uranus-2b9de21987c6419ebe72df19e9c4163a
title: Planet Uranus
*/
import React, { useRef, Suspense } from "react";
import {
  OrbitControls,
  Center,
  Sparkles,
  useProgress,
  Html,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

function Loader() {
  const { progress } = useProgress();
  return <Html center>{progress.toFixed(2)} % loaded</Html>;
}

const UranoModel = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF("/uranus.glb");
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="f029815b00e641df84e4fa9461089ab2fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="uranus"
                  position={[-1312.79, 0.01, 1294443.88]}
                  rotation={[-0.82, 1.18, 0.87]}
                  scale={1000}
                >
                  <group name="rings">
                    <mesh
                      name="rings_lambert3_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.rings_lambert3_0.geometry}
                      material={materials.lambert3}
                    />
                    <mesh
                      name="rings_lambert4_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.rings_lambert4_0.geometry}
                      material={materials.lambert4}
                    />
                    <mesh
                      name="rings_lambert5_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.rings_lambert5_0.geometry}
                      material={materials.lambert5}
                    />
                    <mesh
                      name="rings_lambert2_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.rings_lambert2_0.geometry}
                      material={materials.lambert2}
                    />
                  </group>
                  <mesh
                    name="uranus_uranus_shader_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.uranus_uranus_shader_0.geometry}
                    material={materials.uranus_shader}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

export const Urano = () => {
  return (
    <Canvas camera={{ position: [2, 2, 2], fov: 60 }} className={"canvas"}>
      <Sparkles count={1000} scale={1111 * 2} size={1} speed={0.4}>
          <UranoModel />
      </Sparkles>
  </Canvas>
  )
}

useGLTF.preload("/uranus.glb");