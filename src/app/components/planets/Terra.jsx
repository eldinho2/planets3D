/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: matousekfoto (https://sketchfab.com/matousekfoto)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/earth-globe-98d2b04d46474bafb4250cc75dc583b3
title: Earth Globe üåç
*/
import React, { Suspense } from "react";
import {
  OrbitControls,
  Center,
  Sparkles,
  useProgress,
  Html,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

function Loader() {
  const { progress } = useProgress();
  return <Html center>{progress.toFixed(2)} % loaded</Html>;
}
const TerraModel = (props) => {
  const { nodes, materials } = useGLTF("/terra-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        receiveShadow={true}
        geometry={nodes.meshNode_Material_u2_v1_0.geometry}
        material={materials.Material_u2_v1}
        position={[-5.18, -20.68, 0]}
        rotation={[-Math.PI / 2, 0.46, Math.PI]}
      />
      <mesh
        receiveShadow={true}
        geometry={nodes.meshNode_Material_u1_v1_0.geometry}
        material={materials.Material_u1_v1}
        position={[-5.18, -20.68, 0]}
        rotation={[-Math.PI / 2, 0.46, Math.PI]}
      />
      <mesh
        receiveShadow={true}
        geometry={nodes.meshNode_Material_u1_v2_0.geometry}
        material={materials.Material_u1_v2}
        position={[-5.18, -20.68, 0]}
        rotation={[-Math.PI / 2, 0.46, Math.PI]}
      />
    </group>
  );
};

export const Terra = () => {
  return(
    <Canvas camera={{ position: [30, 10, 10], fov: 60 }} className={"canvas"}>
      <Suspense fallback={<Loader />}>
        <OrbitControls
          enableRotate={true}
          enablePan={false}
          enableZoom={false}
          autoRotate
          autoRotateSpeed={0.3}
        />
        <Sparkles count={5000} scale={1111 * 2} size={1} speed={0.4}>
          <Center>
            <TerraModel />
          </Center>
        </Sparkles>
      </Suspense>
    </Canvas>
  );
};

useGLTF.preload("/terra-transformed.glb");
