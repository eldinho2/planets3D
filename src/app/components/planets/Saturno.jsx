/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: NestaEric (https://sketchfab.com/Nestaeric)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/saturn-c09a1970148c43ad99db134a9d6d00b5
title: Saturn
*/
import React, { useRef, Suspense } from "react";
import {
  OrbitControls,
  Center,
  Sparkles,
  useProgress,
  Html,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

function Loader() {
  const { progress } = useProgress();
  return <Html center>{progress.toFixed(2)} % loaded</Html>;
}

const SaturnoModel = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF("/saturn.glb");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.76}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-0.42, Math.PI / 2, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              material={materials.Saturn}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_5.geometry}
              material={materials.rings}
            />
          </group>
        </group>
      </group>
    </group>
  );
};

export const Saturno = () => {
  return (
    <Canvas camera={{ position: [1.4, 1, 1.4], fov: 60 }} className={"canvas"}>
      <Suspense fallback={<Loader />}>
      <OrbitControls
        enableRotate={true}
        enablePan={true}
        enableZoom={true}
        autoRotate
        autoRotateSpeed={0.3}
      />
        <ambientLight intensity={0.2} />
        <Sparkles count={5000} scale={1111 * 2} size={1} speed={0.4}>
          <SaturnoModel />
        </Sparkles>
      </Suspense>
    </Canvas>
  );
};

useGLTF.preload("/saturn.glb");
