/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: SebastianSosnowski (https://sketchfab.com/SebastianSosnowski)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/the-moon-9916fcec59f04b07b3e8d7f077dc3ded
title: The Moon
*/

import React, { useRef, Suspense, useState } from "react";
import {
  Center,
  useProgress,
  Html,
  Stars,
  CameraControls,
} from "@react-three/drei";
import { Canvas, useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

import Loader from "../Loader";



const LuaModel = (props) => {
  const { nodes, materials } = useGLTF("luanew.glb");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            geometry={nodes.defaultMaterial.geometry}
            material={materials.Material__50}
          />
        </group>
      </group>
    </group>
  );
};

export const Lua = ({recentralized}) => {
  const container = useRef();
  const { progress } = useProgress();

  const cameraControlsRef = useRef();

  if (recentralized) {
    cameraControlsRef.current?.reset(true);
  }



  function RotatingObject() {
    const meshRef = useRef();
    const [rotation, setRotation] = useState(0);

    useFrame(() => {
      setRotation((prevRotation) => prevRotation + 0.0005);
      meshRef.current.rotation.y = rotation;
    });

    return (
      <mesh ref={meshRef}>
        <Stars
          radius={100}
          depth={50}
          count={5000}
          factor={4}
          saturation={0}
          fade={true}
        />

        <Center>
          <LuaModel />
        </Center>
      </mesh>
    );
  }

  return (
    <div className="h-screen w-screen">
    <Canvas ref={container} camera={{ position: [2, 1.1, 2], fov: 60 }}>
      <Suspense fallback={<Loader progress={progress} />}>
        <CameraControls minDistance={1.5} maxDistance={15} autoRotate ref={cameraControlsRef} />
        <ambientLight intensity={0.2} />
        <RotatingObject />
      </Suspense>
    </Canvas>
    </div>
  );
};

useGLTF.preload("luanew.glb");
