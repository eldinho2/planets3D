/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 jupternew.glb --transform
Author: murilo.kleine (https://sketchfab.com/murilo.kleine)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/jupiter-free-downloadable-model-61671f29ca0a4fa39dc9653290282418
Title: Jupiter - Free Downloadable Model
*/
import React, { useRef, Suspense } from "react";
import {
  OrbitControls,
  Center,
  Sparkles,
  useProgress,
  Html,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

function Loader() {
  const { progress } = useProgress();
  return <Html center>{progress.toFixed(2)} % loaded</Html>;
}


const JupiterModel = (props) => {
  const group = useRef()
  const { nodes, materials } = useGLTF('/jupternew.glb')
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.Armature_rootJoint} />
        <skinnedMesh name="JUPITER_0" geometry={nodes.JUPITER_0.geometry} material={materials.JUPITER} skeleton={nodes.JUPITER_0.skeleton} rotation={[-Math.PI / 2, 2, 2]} scale={1.111} />
      </group>
    </group>
  )
}

export const Jupiter = () => {
  return (
    <Canvas camera={{ position: [2, 2, 2], fov: 60 }} className={"canvas"}>
    <Suspense fallback={<Loader />}>
      <OrbitControls
        enableRotate={false}
        enablePan={false}
        enableZoom={false}
        autoRotate
        autoRotateSpeed={0.3}
      />
      <ambientLight intensity={0.2} />
      <Sparkles count={1000} scale={1111 * 2} size={1} speed={0.4}>
          <JupiterModel />
      </Sparkles>
    </Suspense>
  </Canvas>
  )
}

useGLTF.preload('/jupternew.glb')
